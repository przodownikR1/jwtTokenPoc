test {
    logging.captureStandardOutput(LogLevel.INFO)
    logging.captureStandardOutput(LogLevel.ERROR)
    exclude '**/*ITSpec.*'
    minHeapSize = '128m'
    maxHeapSize = "2048m"
    failFast = true
    testLogging {
        showCauses true
        showExceptions true
        showStackTraces true
        showStandardStreams = true
        events 'started', 'passed', 'skipped', 'failed'
    }
    forkEvery = 10
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "Results: (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            boolean skipTests = Boolean.parseBoolean(project.findProperty('SKIP_TESTS') ?: "false")
            /* if (result.testCount == 0 && !skipTests) {
                 throw new IllegalStateException("No tests were found. Failing the build")
             }*/
        }
    }
}